你是一名专业的量化开发工程师。  
我希望你用 Python 实现一个基于 Binance 公共 API 的量化交易信号生成器。  

### 目标
- 监控 BTC/USDT 和 DOGE/USDT 交易对，通过 Binance 公共 REST/WebSocket API 获取数据。  
- 计算布林带 (BOLL, 20, 2) 和 KDJ (9, 3, 3) 技术指标。  
- 按照我定义的交易规则，判断买入/卖出信号。  
- 当条件满足时，在终端输出 “Buy Signal X” / “Sell Signal X”，并写入日志文件（不需要实际下单）。  

### 数据来源
- 使用 Binance 公共 REST API `/api/v3/klines` 获取历史 K 线数据。  
- 使用 Binance WebSocket (`wss://stream.binance.com:9443/stream`) 订阅实时数据。  
- 交易对：BTCUSDT、DOGEUSDT  
- 时间周期：  
  - BTC：4 小时、1 小时  
  - DOGE：1 小时、15 分钟、1 分钟  

### 技术指标
1. **布林带 (BOLL, 20, 2)**  
   - 中轨 MB = 收盘价 20 周期均线 (SMA)  
   - 上轨 UP = MB + 2 × 标准差  
   - 下轨 DN = MB - 2 × 标准差  
   - 触及条件：  
     - Close ≥ UP → 触及上轨  
     - Close ≤ DN → 触及下轨  
     - 收盘价接近 MB → 触及中轨  

2. **KDJ (9, 3, 3)**  
   - RSV = (收盘价 - 最近 9 根最低价) / (最近 9 根最高价 - 最近 9 根最低价) × 100  
   - K = 2/3 × K 前值 + 1/3 × RSV（初始值 50）  
   - D = 2/3 × D 前值 + 1/3 × K（初始值 50）  
   - J = 3K - 2D  
   - 实现时用 `max(K, D, J)` 作为判断值  
   - 超卖阈值：10 / 15 / 20  
   - 超买阈值：90  

### 策略规则

#### 买入信号 1
- BTC/USDT：
  - 24 小时振幅 < 3% 或 24 小时涨幅 > 1%  
  - 4h KDJ < 100 且 1h KDJ < 100  
- DOGE/USDT：  
  - 1h 触及 DN 且 KDJ < 10  
  - 15m 触及 DN 且 KDJ < 10  
  - 1m KDJ < 20  

#### 买入信号 2
- BTC/USDT 同上  
- DOGE/USDT：  
  - 1h 触及 MB 且 KDJ < 15  
  - 15m 触及 DN 且 KDJ < 15  
  - 1m KDJ < 10  

#### 买入信号 3
- BTC/USDT 同上  
- DOGE/USDT：  
  - 1h 触及 MB 且 KDJ < 15  
  - 15m 触及 MB 且 KDJ < 15  
  - 1m KDJ < 10  

---

#### 卖出信号 1
- DOGE/USDT：  
  - 1h 触及 UP 且 KDJ > 90  
  - 15m 触及 MB 且 1h KDJ > 90  
  - 1m KDJ > 90  

#### 卖出信号 2
- DOGE/USDT：  
  - 1h 触及 UP 且 KDJ > 90  
  - 15m 触及 UP 且 1h KDJ > 90  
  - 1m KDJ > 90  

#### 卖出信号 3
- DOGE/USDT：  
  - 1h 触及 MB 且 KDJ > 90  
  - 15m 触及 MB 且 1h KDJ > 90  
  - 1m KDJ > 90  

#### 卖出信号 4
- DOGE/USDT：  
  - 1h 触及 MB 且 KDJ > 90  
  - 15m 触及 UP 且 1h KDJ > 90  
  - 1m KDJ > 90  

---

### 实现要求
- 使用 Python 3.10+  
- 第三方库：`requests`、`websocket-client`、`pandas`、`numpy`（如有需要可用 TA-Lib）  
- 项目结构：  
